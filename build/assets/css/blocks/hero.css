.hero {
  padding: 2.1875rem 0 2.1875rem 0;
}

.hero__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.hero__form {
  width: 40%;
  max-width: 28.625rem;
}

.hero__title {
  text-transform: uppercase;
  font-weight: 800;
  color: #4267b2;
}

.hero__title span {
  color: #e3ad45;
}

.hero__form-wrap {
  margin-top: 1.25rem;
}

.hero__image {
  width: 60%;
}

.hero__image-img {
  min-width: -webkit-fill-available;
}

@media (max-width: 768px) {
  .hero__container {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }

  .hero__form {
    margin-top: 12.5rem;
    width: 67%;
  }

  .hero__title {
    text-align: center;
    background-color: rgba(255, 255, 255, 0.5);
    width: 90%;
    margin: 0 auto;
  }

  .hero__image {
    position: absolute;
    z-index: -1;
    top: -4.5rem;
    width: 100%;
  }
}

@media (max-width: 480px) {
  .hero__form {
    margin-top: 0;
    width: 100%;
  }

  .hero__image {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;base64, */